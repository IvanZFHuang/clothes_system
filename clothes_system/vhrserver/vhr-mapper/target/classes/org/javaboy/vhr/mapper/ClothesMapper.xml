<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.javaboy.vhr.mapper.ClothesMapper">
    <resultMap id="BaseResultMap" type="org.javaboy.vhr.model.Clothes">
        <id column="clothes_id" property="clothesId" jdbcType="INTEGER"/>
        <result column="clothes_color" property="clothesColor" jdbcType="VARCHAR"/>
        <result column="clothes_num" property="clothesNum" jdbcType="VARCHAR"/>
        <result column="customer_id" property="customerId" jdbcType="INTEGER"/>
        <result column="clothes_flow" property="clothesFlow" jdbcType="VARCHAR"/>
        <result column="clothes_adjunct" property="clothesAdjunct" jdbcType="VARCHAR"/>
        <result column="clothes_brand" property="clothesBrand" jdbcType="VARCHAR"/>
        <result column="pre_time" property="preTime" jdbcType="VARCHAR"/>
        <result column="put_clothes_time" property="putClothesTime" jdbcType="VARCHAR"/>
        <result column="take_clothes_time" property="takeClothesTime" jdbcType="VARCHAR"/>
        <result column="progress" property="progress" jdbcType="VARCHAR"/>
        <result column="real_price" property="realPrice" jdbcType="DOUBLE"/>
    </resultMap>
    <resultMap id="clothesDetailMap" type="org.javaboy.vhr.model.ClothesDetail">
        <id column="clothes_id" property="clothesId" jdbcType="INTEGER"/>
        <result column="clothes_color" property="clothesColor" jdbcType="VARCHAR"/>
        <result column="clothes_num" property="clothesNum" jdbcType="VARCHAR"/>
        <result column="clothes_flow" property="clothesFlow" jdbcType="VARCHAR"/>
        <result column="clothes_adjunct" property="clothesAdjunct" jdbcType="VARCHAR"/>
        <result column="clothes_brand" property="clothesBrand" jdbcType="VARCHAR"/>
        <result column="type_name" property="typeName" jdbcType="VARCHAR"/>
        <result column="type_price" property="typePrice" jdbcType="INTEGER"/>
        <result column="cus_name" property="cusName" jdbcType="VARCHAR"/>
        <result column="cus_email" property="cusEmail" jdbcType="VARCHAR"/>
        <result column="cus_address" property="cusAddress" jdbcType="VARCHAR"/>
        <result column="cus_phone" property="cusPhone" jdbcType="VARCHAR"/>
        <result column="member_num" property="memberNum" jdbcType="VARCHAR"/>
        <result column="cus_name" property="cusName" jdbcType="VARCHAR"/>
        <result column="cus_email" property="cusEmail" jdbcType="VARCHAR"/>
        <result column="cus_phone" property="cusPhone" jdbcType="VARCHAR"/>
        <result column="mem_type_name" property="memTypeName" jdbcType="VARCHAR"/>
        <result column="discount" property="discount" jdbcType="VARCHAR"/>
        <result column="balance" property="balance" jdbcType="DOUBLE"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="put_clothes_time" property="putClothesTime" jdbcType="VARCHAR"/>
        <result column="take_clothes_time" property="takeClothesTime" jdbcType="VARCHAR"/>
        <result column="progress" property="progress" jdbcType="VARCHAR"/>
        <result column="pre_time" property="preTime" jdbcType="VARCHAR"/>
        <result column="real_price" property="realPrice" jdbcType="DOUBLE"/>
        <result column="is_pay" property="isPay" jdbcType="INTEGER"/>
        <result column="cus_id" property="cusId" jdbcType="INTEGER"/>
        <result column="member_id" property="memberId" jdbcType="INTEGER"/>
        <result column="is_take" property="isTake" jdbcType="INTEGER"/>
        <result column="wash_reason" property="washReason" jdbcType="VARCHAR"/>
        <result column="found_reason" property="foundReason" jdbcType="VARCHAR"/>
        <result column="refound_amount" property="foundAmount" jdbcType="DOUBLE"/>
    </resultMap>
    <sql id="Base_Column_List">
    clothes_id, clothes_color, clothes_num, customer_id, clothes_flow, clothes_adjunct, 
    clothes_brand
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from clothes
        where clothes_id = #{clothesId,jdbcType=INTEGER}
    </select>
    <!--收衣详情-->
    <select id="listClothes" resultMap="clothesDetailMap">
        SELECT
        c.clothes_id,c.clothes_color,c.clothes_num,c.clothes_flow,c.clothes_adjunct,
        c.clothes_brand, cus.cus_name,cus.cus_email,cus.cus_address,cus.cus_phone,
        ctp.type_name,ctp.type_price, m.balance, mt.type_name as mem_type_name,mt.discount,m.member_num,
        emp.name,c.put_clothes_time,c.take_clothes_time,c.progress,c.pre_time,c.real_price,c.is_pay,cus.cus_id,
        m.member_id,c.is_take,rw.reason as wash_reason ,rf.reason as found_reason,rf.refound_amount
        FROM
        clothes c
        JOIN customer cus ON c.customer_id = cus.cus_id
        JOIN clothes_type_price ctp ON c.type_id = ctp.type_id
        LEFT JOIN members m ON m.custom_id = cus.cus_id
        left join employee emp on c.emp_id = emp.id
        left JOIN member_type mt ON m.type_id = mt.type_id
        left join rewash rw on rw.clothes_id = c.clothes_id
        left join refound rf on rf.clothes_id = c.clothes_id
        <where>
            <if test="keyword!= null and  keyword!=''">
                <bind name="keyword" value="'%'+keyword+'%'"/>
                cus.cus_name like #{keyword} or cus.cus_phone like #{keyword} or c.progress like #{keyword}
            </if>
            <if test="id != null and id != ''">
                and c.user_id = #{id}
            </if>
        </where>
    </select>
    <select id="listClothesPro" resultMap="clothesDetailMap">
       SELECT
        c.clothes_id,c.clothes_color,c.clothes_num,c.clothes_flow,c.clothes_adjunct,
        c.clothes_brand, cus.cus_name,cus.cus_email,cus.cus_address,cus.cus_phone,
        ctp.type_name,ctp.type_price, m.balance, mt.type_name as mem_type_name,mt.discount,m.member_num,
        emp.name,c.put_clothes_time,c.take_clothes_time,c.progress,c.pre_time,c.real_price,c.is_pay,cus.cus_id,
        m.member_id,c.is_take
        FROM
        clothes c
        JOIN customer cus ON c.customer_id = cus.cus_id
        JOIN clothes_type_price ctp ON c.type_id = ctp.type_id
        LEFT JOIN members m ON m.custom_id = cus.cus_id
        left join employee emp on c.emp_id = emp.id
        left JOIN member_type mt ON m.type_id = mt.type_id where c.progress in ("正在洗","已洗完")
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from clothes
    where clothes_id = #{clothesId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="org.javaboy.vhr.model.Clothes">
    insert into clothes (clothes_id, clothes_color, clothes_num, 
      customer_id, clothes_flow, clothes_adjunct, 
      clothes_brand)
    values (#{clothesId,jdbcType=INTEGER}, #{clothesColor,jdbcType=VARCHAR}, #{clothesNum,jdbcType=VARCHAR}, 
      #{customerId,jdbcType=INTEGER}, #{clothesFlow,jdbcType=VARCHAR}, #{clothesAdjunct,jdbcType=VARCHAR}, 
      #{clothesBrand,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="org.javaboy.vhr.model.Clothes"
            useGeneratedKeys="true" keyProperty="clothesId">
        insert into clothes
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="clothesId != null">
                clothes_id,
            </if>
            <if test="clothesColor != null">
                clothes_color,
            </if>
            <if test="clothesNum != null">
                clothes_num,
            </if>
            <if test="customerId != null">
                customer_id,
            </if>
            <if test="clothesFlow != null">
                clothes_flow,
            </if>
            <if test="clothesAdjunct != null">
                clothes_adjunct,
            </if>
            <if test="clothesBrand != null">
                clothes_brand,
            </if>

            <if test="realPrice != null">
                real_price,
            </if>
            <if test="preTime != null">
                pre_time,
            </if>
            <if test="putClothesTime != null">
                put_clothes_time,
            </if>
            <if test="takeClothesTime != null">
                take_clothes_time,
            </if>
            <if test="progress != null">
                progress,
            </if>
            <if test="typeId != null">
                type_id,
            </if>
            <if test="empId != null">
                emp_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="clothesId != null">
                #{clothesId,jdbcType=INTEGER},
            </if>
            <if test="clothesColor != null">
                #{clothesColor,jdbcType=VARCHAR},
            </if>
            <if test="clothesNum != null">
                #{clothesNum,jdbcType=VARCHAR},
            </if>
            <if test="customerId != null">
                #{customerId,jdbcType=INTEGER},
            </if>
            <if test="clothesFlow != null">
                #{clothesFlow,jdbcType=VARCHAR},
            </if>
            <if test="clothesAdjunct != null">
                #{clothesAdjunct,jdbcType=VARCHAR},
            </if>
            <if test="clothesBrand != null">
                #{clothesBrand,jdbcType=VARCHAR},
            </if>

            <if test="realPrice != null">
                #{realPrice,jdbcType=DOUBLE},
            </if>
            <if test="preTime != null">
                #{preTime,jdbcType=VARCHAR},
            </if>
            <if test="putClothesTime != null">
                #{putClothesTime,jdbcType=VARCHAR},
            </if>
            <if test="takeClothesTime != null">
                #{takeClothesTime,jdbcType=VARCHAR},
            </if>
            <if test="progress != null">
                #{progress,jdbcType=VARCHAR},
            </if>
            <if test="typeId != null">
                #{typeId,jdbcType=INTEGER},
            </if>
            <if test="empId != null">
                #{empId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.javaboy.vhr.model.Clothes">
        update clothes
        <set>
            <if test="clothesColor != null">
                clothes_color = #{clothesColor,jdbcType=VARCHAR},
            </if>
            <if test="clothesNum != null">
                clothes_num = #{clothesNum,jdbcType=VARCHAR},
            </if>
            <if test="customerId != null">
                customer_id = #{customerId,jdbcType=INTEGER},
            </if>
            <if test="clothesFlow != null">
                clothes_flow = #{clothesFlow,jdbcType=VARCHAR},
            </if>
            <if test="clothesAdjunct != null">
                clothes_adjunct = #{clothesAdjunct,jdbcType=VARCHAR},
            </if>
            <if test="clothesBrand != null">
                clothes_brand = #{clothesBrand,jdbcType=VARCHAR},
            </if>
        </set>
        where clothes_id = #{clothesId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.javaboy.vhr.model.Clothes">
    update clothes
    set clothes_color = #{clothesColor,jdbcType=VARCHAR},
      clothes_num = #{clothesNum,jdbcType=VARCHAR},
      customer_id = #{customerId,jdbcType=INTEGER},
      clothes_flow = #{clothesFlow,jdbcType=VARCHAR},
      clothes_adjunct = #{clothesAdjunct,jdbcType=VARCHAR},
      clothes_brand = #{clothesBrand,jdbcType=VARCHAR}
    where clothes_id = #{clothesId,jdbcType=INTEGER}
  </update>
    <update id="updateNum">
        update clothes set clothes_num = #{clothesNum,jdbcType=VARCHAR}
        where clothes_id = #{id,jdbcType=INTEGER}
    </update>
    <!--修改付费状态-->
    <update id="updateIsPay">
        update clothes set is_pay = 1 where clothes_id = #{clothesId}
    </update>
    <update id="updateTakeClothes">
        update clothes set take_clothes_time = #{date},progress = #{status},is_take = 1 where clothes_id = #{clothesId}
    </update>
    <update id="updateStates">
        update clothes set progress = #{status} where clothes_id = #{clothesId}
    </update>
    <update id="updateTime">
        update clothes set  put_clothes_time = #{formatDate},pre_time = #{preTime} where clothes_id = #{clothesId}
    </update>
</mapper>